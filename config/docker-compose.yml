version: "3.8"
services:
  rabbitmq:
    image: rabbitmq:3-management-alpine
    hostname: tubes-message-broker
    env_file:
      - .env
    environment:
      RABBITMQ_DEFAULT_USER: ${MESSAGE_BROKER_USER}
      RABBITMQ_DEFAULT_PASS: ${MESSAGE_BROKER_PASSWORD}
    ports:
      - "5673:5672"
      - "15673:15672"
    volumes:
      - ./rabbitmq/queue/data/:/var/lib/rabbitmq/
      - ./rabbitmq/queue/log/:/var/log/rabbitmq
    networks:
      - app-network
  ticket_app_db:
    image: postgres:latest
    hostname: tubes-ticket-app-db
    restart: always
    env_file:
      - .env
    volumes:
      - "../ticket-app/db:/var/lib/postgresql/data"
      - "../ticket-app/migrations:/docker-entrypoint-initdb.d/"
    ports:
      - "5435:5432"
    environment:
      POSTGRES_USER: ${DB_USER_TICKET}
      POSTGRES_PASSWORD: ${DB_PASSWORD_TICKET}
      POSTGRES_DB: ${DB_NAME_TICKET}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "db_prod"]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s
    networks:
      - app-network
  ticket_app:
    build: ../ticket-app
    restart: always
    volumes:
      - ../ticket-app/src:/usr/src/app/src
    ports:
      - "8002:8002"
    depends_on:
      ticket_app_db:
        condition: service_healthy
    networks:
      - app-network
  client_app:
    extends:
      file: ../client-app/docker-compose.yaml
      service: client_app
    networks:
      - app-network
  client_app_db:
    extends:
      file: ../client-app/docker-compose.yaml
      service: client_app_db
    networks:
      - app-network
  payment_app:
    extends:
      file: ../payment-app/docker-compose.yml
      service: payment_app
    networks:
      - app-network
  payment_app_db:
    extends:
      file: ../payment-app/docker-compose.yml
      service: payment_app_db
    networks:
      - app-network
  payment_app_queue:
    extends:
      file: ../payment-app/docker-compose.yml
      service: payment_app_queue
    networks:
      - app-network
networks:
  app-network:
    driver: bridge
